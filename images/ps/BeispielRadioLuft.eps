%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 75 645 413 683 
%%LanguageLevel: 1
%%Creator: CorelDRAW 11
%%Title: BeispielRadioLuft.eps
%%CreationDate: Tue Oct 21 10:20:29 2003
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 11 Version 11.633
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.1
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax 82.51483 658.12224 153.22677 668.03414 @E
[0.00028346 0.00000000 0.00000000 0.00028346 82.51483163 658.31355072] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49389.00000 z
%CHAR: 0 0 (R) @t
33379 0 m
24645 0 L
13574 15286 L
12759 15261 12092 15245 11573 15245 c
11368 15245 11145 15245 10899 15253 c
10660 15261 10413 15269 10149 15286 C
10149 5787 l
10149 3729 10380 2453 10824 1951 c
11442 1243 12355 889 13574 889 c
14858 889 L
14858 0 L
848 0 L
848 889 L
2074 889 l
3457 889 4445 1342 5038 2239 c
5375 2741 5548 3926 5548 5787 c
5548 26917 l
5548 28975 5318 30251 4873 30745 c
4247 31453 3309 31807 2074 31807 c
848 31807 L
848 32704 L
12759 32704 l
16233 32704 18793 32449 20439 31938 c
22085 31436 23484 30506 24637 29148 c
25781 27781 26357 26168 26357 24283 c
26357 22274 25707 20529 24390 19048 c
23081 17574 21056 16529 18307 15920 C
25057 6536 l
26596 4379 27929 2947 29033 2239 c
30144 1539 31592 1087 33379 889 C
33379 0 L
@c
10149 16809 m
10462 16809 10726 16809 10948 16800 c
11170 16792 11359 16784 11499 16784 c
14619 16784 16973 17459 18554 18809 c
20142 20159 20933 21879 20933 23970 c
20933 26012 20291 27674 19015 28950 c
17739 30226 16043 30868 13936 30868 c
13006 30868 11746 30712 10149 30407 C
10149 16809 L
@c
F
%CHAR: 32942 0 (a) @t
47001 3186 m
44738 1432 43314 420 42729 148 c
41865 -255 40943 -461 39963 -461 c
38432 -461 37173 66 36185 1111 c
35197 2157 34704 3531 34704 5235 c
34704 6314 34942 7244 35428 8034 c
36086 9121 37231 10149 38860 11121 c
40490 12084 43207 13253 47001 14636 C
47001 15508 l
47001 17706 46656 19221 45956 20044 c
45256 20859 44236 21270 42902 21270 c
41890 21270 41083 20999 40490 20447 c
39881 19904 39577 19278 39577 18570 c
39626 17171 l
39626 16430 39437 15862 39058 15459 c
38679 15055 38185 14858 37576 14858 c
36975 14858 36490 15064 36111 15483 c
35732 15903 35543 16471 35543 17196 c
35543 18578 36251 19846 37667 21007 c
39083 22159 41066 22744 43626 22744 c
45586 22744 47191 22414 48450 21756 c
49397 21254 50096 20472 50549 19410 c
50837 18718 50977 17311 50977 15171 c
50977 7672 l
50977 5564 51018 4272 51101 3795 c
51183 3326 51315 3004 51496 2848 c
51685 2683 51899 2601 52138 2601 c
52393 2601 52624 2659 52813 2774 c
53150 2980 53801 3572 54764 4536 C
54764 3186 L
52969 774 51249 -436 49603 -436 c
48821 -436 48195 -165 47726 387 c
47257 930 47018 1869 47001 3186 C
@c
47001 4750 m
47001 13170 L
44573 12199 43009 11516 42301 11121 c
41025 10413 40120 9672 39577 8898 c
39025 8124 38753 7285 38753 6363 c
38753 5211 39099 4247 39791 3482 c
40482 2725 41281 2338 42178 2338 c
43404 2338 45009 3144 47001 4750 C
@c
F
%CHAR: 54862 0 (d) @t
72008 2486 m
70930 1358 69876 552 68847 58 c
67818 -428 66707 -675 65522 -675 c
63110 -675 61003 337 59200 2354 c
57406 4371 56500 6964 56500 10125 c
56500 13294 57496 16191 59496 18825 c
61488 21451 64048 22768 67185 22768 c
69127 22768 70741 22143 72008 20908 C
72008 24983 l
72008 27510 71951 29057 71827 29642 c
71704 30218 71514 30613 71259 30819 c
71004 31033 70683 31132 70296 31132 c
69876 31132 69325 31008 68633 30745 C
68321 31592 L
74906 34292 L
75984 34292 L
75984 8750 l
75984 6165 76050 4585 76165 4017 c
76289 3441 76478 3046 76750 2823 c
77013 2593 77326 2486 77671 2486 c
78108 2486 78692 2618 79408 2897 C
79680 2050 L
73119 -675 L
72008 -675 L
72008 2486 L
@c
72008 4173 m
72008 15558 l
71909 16644 71621 17648 71144 18546 c
70658 19443 70016 20126 69226 20579 c
68428 21040 67654 21270 66896 21270 c
65481 21270 64221 20636 63110 19369 c
61645 17689 60912 15253 60912 12034 c
60912 8783 61620 6297 63036 4568 c
64452 2840 66024 1976 67761 1976 c
69226 1976 70642 2708 72008 4173 C
@c
F
%CHAR: 79557 0 (i) @t
86718 34292 m
87393 34292 87970 34054 88447 33585 c
88916 33107 89155 32531 89155 31856 c
89155 31181 88916 30605 88447 30119 c
87970 29642 87393 29395 86718 29395 c
86043 29395 85467 29642 84982 30119 c
84504 30605 84257 31181 84257 31856 c
84257 32531 84496 33107 84973 33585 c
85443 34054 86027 34292 86718 34292 c
@c
88719 22744 m
88719 4988 l
88719 3605 88817 2692 89023 2231 c
89221 1770 89517 1432 89912 1202 c
90307 980 91032 864 92077 864 C
92077 0 L
81343 0 L
81343 864 L
82422 864 83146 971 83508 1185 c
83879 1391 84175 1737 84389 2223 c
84611 2700 84718 3622 84718 4988 c
84718 13508 l
84718 15903 84644 17451 84504 18159 c
84389 18677 84208 19031 83969 19229 c
83730 19435 83401 19533 82981 19533 c
82529 19533 81985 19410 81343 19171 C
81006 20044 L
87657 22744 L
88719 22744 L
@c
F
%CHAR: 93279 0 (o) @t
105626 22744 m
108968 22744 111652 21468 113685 18932 c
115405 16759 116261 14265 116261 11458 c
116261 9474 115784 7474 114837 5449 c
113891 3424 112582 1893 110919 864 c
109256 -165 107404 -675 105363 -675 c
102029 -675 99387 650 97428 3301 c
95773 5540 94942 8050 94942 10824 c
94942 12858 95444 14866 96448 16866 c
97452 18867 98778 20348 100416 21303 c
102054 22266 103791 22744 105626 22744 c
@c
104877 21171 m
104029 21171 103173 20924 102309 20414 c
101453 19904 100753 19023 100226 17747 c
99691 16479 99428 14850 99428 12858 c
99428 9639 100070 6865 101346 4536 c
102622 2206 104309 1037 106400 1037 c
107956 1037 109240 1679 110261 2963 c
111273 4256 111775 6462 111775 9598 c
111775 13524 110936 16611 109240 18858 c
108104 20406 106647 21171 104877 21171 c
@c
F
%CHAR: 117974 0 (s) @t
133795 22744 m
133795 15220 L
132996 15220 L
132387 17582 131605 19188 130651 20044 c
129687 20892 128469 21320 126996 21320 c
125868 21320 124963 21023 124271 20422 c
123580 19830 123234 19171 123234 18447 c
123234 17550 123489 16776 123999 16134 c
124502 15475 125514 14776 127045 14035 c
130560 12323 l
133828 10734 135458 8635 135458 6025 c
135458 4017 134700 2404 133178 1169 c
131663 -58 129959 -675 128082 -675 c
126724 -675 125185 -436 123448 49 c
122921 206 122485 288 122147 288 c
121777 288 121489 82 121275 -337 C
120485 -337 L
120485 7548 L
121275 7548 L
121728 5301 122592 3605 123860 2461 c
125127 1317 126551 749 128123 749 c
129235 749 130140 1070 130840 1720 c
131540 2379 131885 3161 131885 4075 c
131885 5186 131498 6116 130716 6873 c
129943 7631 128387 8585 126049 9746 c
123720 10899 122197 11944 121472 12874 c
120748 13796 120386 14948 120386 16348 c
120386 18167 121011 19690 122254 20908 c
123497 22126 125111 22744 127086 22744 c
127959 22744 129012 22554 130247 22184 c
131070 21945 131614 21822 131885 21822 c
132149 21822 132346 21879 132494 21995 c
132634 22110 132807 22357 132996 22744 C
133795 22744 L
@c
F
%CHAR: 137195 0 (t) @t
145155 29345 m
145155 22093 L
150316 22093 L
150316 20406 L
145155 20406 L
145155 6075 l
145155 4643 145361 3679 145772 3186 c
146176 2683 146702 2437 147344 2437 c
147879 2437 148390 2601 148892 2930 c
149386 3260 149773 3745 150053 4387 C
150991 4387 L
150423 2815 149633 1630 148604 831 c
147575 33 146513 -362 145418 -362 c
144677 -362 143953 -156 143245 255 c
142537 667 142019 1251 141681 2017 c
141344 2774 141171 3951 141171 5548 c
141171 20406 L
137681 20406 L
137681 21196 L
138561 21550 139467 22151 140389 22991 c
141311 23838 142142 24843 142858 25995 c
143229 26604 143747 27724 144406 29345 C
145155 29345 L
@c
F
%CHAR: 150917 0 (a) @t
164976 3186 m
162713 1432 161289 420 160704 148 c
159840 -255 158918 -461 157938 -461 c
156407 -461 155148 66 154160 1111 c
153172 2157 152679 3531 152679 5235 c
152679 6314 152917 7244 153403 8034 c
154061 9121 155206 10149 156835 11121 c
158465 12084 161182 13253 164976 14636 C
164976 15508 l
164976 17706 164631 19221 163931 20044 c
163231 20859 162211 21270 160877 21270 c
159865 21270 159058 20999 158465 20447 c
157856 19904 157552 19278 157552 18570 c
157601 17171 l
157601 16430 157412 15862 157033 15459 c
156654 15055 156160 14858 155551 14858 c
154950 14858 154465 15064 154086 15483 c
153707 15903 153518 16471 153518 17196 c
153518 18578 154226 19846 155642 21007 c
157058 22159 159041 22744 161601 22744 c
163561 22744 165166 22414 166425 21756 c
167372 21254 168071 20472 168524 19410 c
168812 18718 168952 17311 168952 15171 c
168952 7672 l
168952 5564 168993 4272 169076 3795 c
169158 3326 169290 3004 169471 2848 c
169660 2683 169874 2601 170113 2601 c
170368 2601 170599 2659 170788 2774 c
171125 2980 171776 3572 172739 4536 C
172739 3186 L
170944 774 169224 -436 167578 -436 c
166796 -436 166170 -165 165701 387 c
165232 930 164993 1869 164976 3186 C
@c
164976 4750 m
164976 13170 L
162548 12199 160984 11516 160276 11121 c
159000 10413 158095 9672 157552 8898 c
157000 8124 156728 7285 156728 6363 c
156728 5211 157074 4247 157766 3482 c
158457 2725 159256 2338 160153 2338 c
161379 2338 162984 3144 164976 4750 C
@c
F
%CHAR: 172837 0 (t) @t
180797 29345 m
180797 22093 L
185958 22093 L
185958 20406 L
180797 20406 L
180797 6075 l
180797 4643 181003 3679 181414 3186 c
181818 2683 182344 2437 182986 2437 c
183521 2437 184032 2601 184534 2930 c
185028 3260 185415 3745 185695 4387 C
186633 4387 L
186065 2815 185275 1630 184246 831 c
183217 33 182155 -362 181060 -362 c
180319 -362 179595 -156 178887 255 c
178179 667 177661 1251 177323 2017 c
176986 2774 176813 3951 176813 5548 c
176813 20406 L
173323 20406 L
173323 21196 L
174203 21550 175109 22151 176031 22991 c
176953 23838 177784 24843 178500 25995 c
178871 26604 179389 27724 180048 29345 C
180797 29345 L
@c
F
%CHAR: 186559 0 (i) @t
193720 34292 m
194395 34292 194972 34054 195449 33585 c
195918 33107 196157 32531 196157 31856 c
196157 31181 195918 30605 195449 30119 c
194972 29642 194395 29395 193720 29395 c
193045 29395 192469 29642 191984 30119 c
191506 30605 191259 31181 191259 31856 c
191259 32531 191498 33107 191975 33585 c
192445 34054 193029 34292 193720 34292 c
@c
195721 22744 m
195721 4988 l
195721 3605 195819 2692 196025 2231 c
196223 1770 196519 1432 196914 1202 c
197309 980 198034 864 199079 864 C
199079 0 L
188345 0 L
188345 864 L
189424 864 190148 971 190510 1185 c
190881 1391 191177 1737 191391 2223 c
191613 2700 191720 3622 191720 4988 c
191720 13508 l
191720 15903 191646 17451 191506 18159 c
191391 18677 191210 19031 190971 19229 c
190732 19435 190403 19533 189983 19533 c
189531 19533 188987 19410 188345 19171 C
188008 20044 L
194659 22744 L
195721 22744 L
@c
F
%CHAR: 200281 0 (o) @t
212628 22744 m
215970 22744 218654 21468 220687 18932 c
222407 16759 223263 14265 223263 11458 c
223263 9474 222786 7474 221839 5449 c
220893 3424 219584 1893 217921 864 c
216258 -165 214406 -675 212365 -675 c
209031 -675 206389 650 204430 3301 c
202775 5540 201944 8050 201944 10824 c
201944 12858 202446 14866 203450 16866 c
204454 18867 205780 20348 207418 21303 c
209056 22266 210793 22744 212628 22744 c
@c
211879 21171 m
211031 21171 210175 20924 209311 20414 c
208455 19904 207755 19023 207228 17747 c
206693 16479 206430 14850 206430 12858 c
206430 9639 207072 6865 208348 4536 c
209624 2206 211311 1037 213402 1037 c
214958 1037 216242 1679 217263 2963 c
218275 4256 218777 6462 218777 9598 c
218777 13524 217938 16611 216242 18858 c
215106 20406 213649 21171 211879 21171 c
@c
F
%CHAR: 224976 0 (n) @t
232961 18060 m
235545 21180 238015 22744 240361 22744 c
241571 22744 242608 22439 243472 21838 c
244345 21237 245036 20241 245547 18858 c
245900 17895 246073 16414 246073 14422 c
246073 4988 l
246073 3597 246189 2642 246419 2148 c
246592 1745 246880 1432 247275 1202 c
247662 980 248395 864 249456 864 C
249456 0 L
238525 0 L
238525 864 L
238986 864 l
240015 864 240739 1029 241143 1342 c
241554 1655 241842 2115 241999 2725 c
242065 2963 242098 3721 242098 4988 c
242098 14035 l
242098 16043 241834 17500 241316 18414 c
240789 19319 239908 19772 238673 19772 c
236764 19772 234854 18727 232961 16636 C
232961 4988 l
232961 3498 233043 2576 233224 2223 c
233446 1753 233759 1408 234154 1194 c
234549 980 235348 864 236549 864 C
236549 0 L
225626 0 L
225626 864 L
226112 864 l
227231 864 227997 1152 228392 1720 c
228779 2297 228977 3383 228977 4988 c
228977 13195 l
228977 15846 228919 17459 228795 18035 c
228680 18620 228491 19015 228244 19221 c
227997 19426 227659 19533 227240 19533 c
226795 19533 226252 19410 225626 19171 C
225264 20044 L
231923 22744 L
232961 22744 L
232961 18060 L
@c
F
T
@rax %Note: Object
76.09039 646.00866 161.85969 679.54252 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
76.09039 679.54252 m
161.85969 679.54252 L
161.85969 646.00866 L
76.09039 646.00866 L
76.09039 679.54252 L
@c
S

@rax 247.20151 659.13364 271.45020 669.03137 @E
[0.00028346 0.00000000 0.00000000 0.00028201 247.20150277 659.32468295] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49643.00000 z
%CHAR: 0 0 (L) @t
28454 9093 m
29256 8919 L
26443 0 L
993 0 L
993 894 L
2234 894 l
3624 894 4617 1349 5213 2250 c
5552 2772 5717 3971 5717 5841 c
5717 27055 l
5717 29107 5494 30390 5039 30903 c
4410 31614 3475 31970 2234 31970 c
993 31970 L
993 32872 L
15877 32872 L
15877 31970 L
14132 31987 12907 31829 12204 31490 c
11501 31151 11021 30721 10764 30199 c
10508 29687 10375 28445 10375 26493 c
10375 5841 l
10375 4501 10508 3583 10764 3078 c
10955 2739 11252 2490 11658 2325 c
12063 2168 13321 2085 15439 2085 c
17838 2085 l
20362 2085 22133 2267 23150 2639 c
24168 3012 25095 3674 25938 4617 c
26774 5560 27618 7058 28454 9093 C
@c
F
%CHAR: 30324 0 (u) @t
51340 22207 m
51340 8754 l
51340 6181 51397 4609 51522 4038 c
51646 3458 51836 3061 52101 2838 c
52374 2606 52680 2499 53036 2499 c
53540 2499 54103 2631 54732 2912 C
55071 2060 L
48427 -678 L
47343 -678 L
47343 4021 L
45432 1953 43976 654 42975 124 c
41974 -414 40915 -678 39806 -678 c
38556 -678 37481 -323 36562 397 c
35652 1117 35015 2044 34659 3177 c
34304 4311 34130 5908 34130 7976 c
34130 17888 l
34130 18939 34014 19667 33791 20072 c
33567 20478 33228 20784 32781 21007 c
32343 21222 31532 21322 30374 21305 C
30374 22207 L
38151 22207 L
38151 7347 l
38151 5279 38515 3922 39235 3276 c
39955 2623 40823 2300 41841 2300 c
42536 2300 43322 2524 44199 2954 c
45085 3392 46127 4228 47343 5452 C
47343 18037 l
47343 19295 47112 20147 46648 20594 c
46185 21032 45233 21272 43777 21305 C
43777 22207 L
51340 22207 L
@c
F
%CHAR: 55146 0 (f) @t
65372 20461 m
65372 5866 l
65372 3798 65604 2490 66051 1936 c
66655 1225 67449 869 68450 869 c
70469 869 L
70469 0 L
57206 0 L
57206 869 L
58199 869 l
58844 869 59440 1034 59970 1357 c
60499 1680 60871 2118 61070 2664 c
61277 3219 61376 4286 61376 5866 c
61376 20461 L
57057 20461 L
57057 22207 L
61376 22207 L
61376 23655 l
61376 25872 61732 27750 62444 29281 c
63155 30820 64239 32061 65703 33004 c
67168 33948 68806 34419 70635 34419 c
72331 34419 73895 33873 75318 32773 c
76253 32045 76716 31225 76716 30324 c
76716 29835 76509 29380 76087 28958 c
75665 28528 75218 28313 74730 28313 c
74358 28313 73969 28445 73555 28710 c
73142 28975 72637 29554 72041 30431 c
71445 31316 70891 31904 70395 32218 c
69890 32524 69336 32673 68723 32673 c
67979 32673 67350 32475 66829 32078 c
66316 31689 65943 31068 65712 30241 c
65488 29405 65372 27262 65372 23804 c
65372 22207 L
71098 22207 L
71098 20461 L
65372 20461 L
@c
F
%CHAR: 71677 0 (t) @t
79678 29496 m
79678 22207 L
84865 22207 L
84865 20511 L
79678 20511 L
79678 6106 l
79678 4666 79885 3698 80298 3202 c
80704 2697 81233 2449 81879 2449 c
82416 2449 82929 2615 83434 2945 c
83931 3276 84319 3765 84601 4410 C
85544 4410 L
84973 2830 84179 1638 83145 836 c
82110 33 81043 -364 79943 -364 c
79198 -364 78470 -157 77758 256 c
77047 670 76525 1258 76186 2027 c
75847 2788 75673 3971 75673 5577 c
75673 20511 L
72165 20511 L
72165 21305 L
73050 21661 73961 22265 74887 23109 c
75814 23961 76650 24970 77369 26129 c
77742 26741 78263 27866 78925 29496 C
79678 29496 L
@c
F
T
@rax %Note: Object
236.88425 646.44435 282.67087 681.08939 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
236.88425 681.08939 m
282.67087 681.08939 L
282.67087 646.44435 L
236.88425 646.44435 L
236.88425 681.08939 L
@c
S

@rax 366.65830 658.97717 399.61417 668.88907 @E
[0.00028346 0.00000000 0.00000000 0.00028346 366.65828580 659.16847982] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49389.00000 z
%CHAR: 0 0 (R) @t
33379 0 m
24645 0 L
13574 15286 L
12759 15261 12092 15245 11573 15245 c
11368 15245 11145 15245 10899 15253 c
10660 15261 10413 15269 10149 15286 C
10149 5787 l
10149 3729 10380 2453 10824 1951 c
11442 1243 12355 889 13574 889 c
14858 889 L
14858 0 L
848 0 L
848 889 L
2074 889 l
3457 889 4445 1342 5038 2239 c
5375 2741 5548 3926 5548 5787 c
5548 26917 l
5548 28975 5318 30251 4873 30745 c
4247 31453 3309 31807 2074 31807 c
848 31807 L
848 32704 L
12759 32704 l
16233 32704 18793 32449 20439 31938 c
22085 31436 23484 30506 24637 29148 c
25781 27781 26357 26168 26357 24283 c
26357 22274 25707 20529 24390 19048 c
23081 17574 21056 16529 18307 15920 C
25057 6536 l
26596 4379 27929 2947 29033 2239 c
30144 1539 31592 1087 33379 889 C
33379 0 L
@c
10149 16809 m
10462 16809 10726 16809 10948 16800 c
11170 16792 11359 16784 11499 16784 c
14619 16784 16973 17459 18554 18809 c
20142 20159 20933 21879 20933 23970 c
20933 26012 20291 27674 19015 28950 c
17739 30226 16043 30868 13936 30868 c
13006 30868 11746 30712 10149 30407 C
10149 16809 L
@c
F
%CHAR: 32942 0 (a) @t
47001 3186 m
44738 1432 43314 420 42729 148 c
41865 -255 40943 -461 39963 -461 c
38432 -461 37173 66 36185 1111 c
35197 2157 34704 3531 34704 5235 c
34704 6314 34942 7244 35428 8034 c
36086 9121 37231 10149 38860 11121 c
40490 12084 43207 13253 47001 14636 C
47001 15508 l
47001 17706 46656 19221 45956 20044 c
45256 20859 44236 21270 42902 21270 c
41890 21270 41083 20999 40490 20447 c
39881 19904 39577 19278 39577 18570 c
39626 17171 l
39626 16430 39437 15862 39058 15459 c
38679 15055 38185 14858 37576 14858 c
36975 14858 36490 15064 36111 15483 c
35732 15903 35543 16471 35543 17196 c
35543 18578 36251 19846 37667 21007 c
39083 22159 41066 22744 43626 22744 c
45586 22744 47191 22414 48450 21756 c
49397 21254 50096 20472 50549 19410 c
50837 18718 50977 17311 50977 15171 c
50977 7672 l
50977 5564 51018 4272 51101 3795 c
51183 3326 51315 3004 51496 2848 c
51685 2683 51899 2601 52138 2601 c
52393 2601 52624 2659 52813 2774 c
53150 2980 53801 3572 54764 4536 C
54764 3186 L
52969 774 51249 -436 49603 -436 c
48821 -436 48195 -165 47726 387 c
47257 930 47018 1869 47001 3186 C
@c
47001 4750 m
47001 13170 L
44573 12199 43009 11516 42301 11121 c
41025 10413 40120 9672 39577 8898 c
39025 8124 38753 7285 38753 6363 c
38753 5211 39099 4247 39791 3482 c
40482 2725 41281 2338 42178 2338 c
43404 2338 45009 3144 47001 4750 C
@c
F
%CHAR: 54862 0 (d) @t
72008 2486 m
70930 1358 69876 552 68847 58 c
67818 -428 66707 -675 65522 -675 c
63110 -675 61003 337 59200 2354 c
57406 4371 56500 6964 56500 10125 c
56500 13294 57496 16191 59496 18825 c
61488 21451 64048 22768 67185 22768 c
69127 22768 70741 22143 72008 20908 C
72008 24983 l
72008 27510 71951 29057 71827 29642 c
71704 30218 71514 30613 71259 30819 c
71004 31033 70683 31132 70296 31132 c
69876 31132 69325 31008 68633 30745 C
68321 31592 L
74906 34292 L
75984 34292 L
75984 8750 l
75984 6165 76050 4585 76165 4017 c
76289 3441 76478 3046 76750 2823 c
77013 2593 77326 2486 77671 2486 c
78108 2486 78692 2618 79408 2897 C
79680 2050 L
73119 -675 L
72008 -675 L
72008 2486 L
@c
72008 4173 m
72008 15558 l
71909 16644 71621 17648 71144 18546 c
70658 19443 70016 20126 69226 20579 c
68428 21040 67654 21270 66896 21270 c
65481 21270 64221 20636 63110 19369 c
61645 17689 60912 15253 60912 12034 c
60912 8783 61620 6297 63036 4568 c
64452 2840 66024 1976 67761 1976 c
69226 1976 70642 2708 72008 4173 C
@c
F
%CHAR: 79557 0 (i) @t
86718 34292 m
87393 34292 87970 34054 88447 33585 c
88916 33107 89155 32531 89155 31856 c
89155 31181 88916 30605 88447 30119 c
87970 29642 87393 29395 86718 29395 c
86043 29395 85467 29642 84982 30119 c
84504 30605 84257 31181 84257 31856 c
84257 32531 84496 33107 84973 33585 c
85443 34054 86027 34292 86718 34292 c
@c
88719 22744 m
88719 4988 l
88719 3605 88817 2692 89023 2231 c
89221 1770 89517 1432 89912 1202 c
90307 980 91032 864 92077 864 C
92077 0 L
81343 0 L
81343 864 L
82422 864 83146 971 83508 1185 c
83879 1391 84175 1737 84389 2223 c
84611 2700 84718 3622 84718 4988 c
84718 13508 l
84718 15903 84644 17451 84504 18159 c
84389 18677 84208 19031 83969 19229 c
83730 19435 83401 19533 82981 19533 c
82529 19533 81985 19410 81343 19171 C
81006 20044 L
87657 22744 L
88719 22744 L
@c
F
%CHAR: 93279 0 (o) @t
105626 22744 m
108968 22744 111652 21468 113685 18932 c
115405 16759 116261 14265 116261 11458 c
116261 9474 115784 7474 114837 5449 c
113891 3424 112582 1893 110919 864 c
109256 -165 107404 -675 105363 -675 c
102029 -675 99387 650 97428 3301 c
95773 5540 94942 8050 94942 10824 c
94942 12858 95444 14866 96448 16866 c
97452 18867 98778 20348 100416 21303 c
102054 22266 103791 22744 105626 22744 c
@c
104877 21171 m
104029 21171 103173 20924 102309 20414 c
101453 19904 100753 19023 100226 17747 c
99691 16479 99428 14850 99428 12858 c
99428 9639 100070 6865 101346 4536 c
102622 2206 104309 1037 106400 1037 c
107956 1037 109240 1679 110261 2963 c
111273 4256 111775 6462 111775 9598 c
111775 13524 110936 16611 109240 18858 c
108104 20406 106647 21171 104877 21171 c
@c
F
T
@rax %Note: Object
355.03342 646.86331 411.13814 681.04205 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
355.03342 681.04205 m
411.13814 681.04205 L
411.13814 646.86331 L
355.03342 646.86331 L
355.03342 681.04205 L
@c
S

@rax %Note: Object
382.11846 675.88299 384.05310 679.75228 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
384.05310 675.88299 m
382.11846 675.88299 L
382.11846 679.75228 L
384.05310 679.75228 L
384.05310 675.88299 L
@c
S

@rax %Note: Object
283.79254 663.23735 353.75953 663.23849 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
283.79254 663.23792 m
346.72309 663.23792 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
353.75953 663.23792 m
339.75865 669.23830 L
341.75877 665.23805 341.75877 661.23780 339.75865 657.23754 C
353.75953 663.23792 L
f
@J

@rax %Note: Object
164.41937 664.03077 236.39102 664.03191 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
164.41937 664.03134 m
229.35458 664.03134 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
236.39102 664.03134 m
222.39014 670.03172 L
224.39027 666.03146 224.39027 662.03121 222.39014 658.03096 C
236.39102 664.03134 L
f
@J

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
