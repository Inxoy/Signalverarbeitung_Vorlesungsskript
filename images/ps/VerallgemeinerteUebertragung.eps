%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 75 668 514 705 
%%LanguageLevel: 1
%%Creator: CorelDRAW 11
%%Title: VerallgemeinerteUebertragung.eps
%%CreationDate: Tue Oct 21 10:56:57 2003
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 11 Version 11.633
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.1
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
76.73953 669.56372 184.15672 702.81184 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.99984 1.99984 0.00000 @w
/$fm 0 def
76.73953 702.81184 m
184.15672 702.81184 L
184.15672 669.56372 L
76.73953 669.56372 L
76.73953 702.81184 L
@c
S

@rax %Note: Object
404.86337 670.23836 512.28057 703.48649 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.99984 1.99984 0.00000 @w
/$fm 0 def
404.86337 703.48649 m
512.28057 703.48649 L
512.28057 670.23836 L
404.86337 670.23836 L
404.86337 703.48649 L
@c
S

@rax %Note: Object
240.27250 670.23836 347.68970 703.48649 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.99984 1.99984 0.00000 @w
/$fm 0 def
240.27250 703.48649 m
347.68970 703.48649 L
347.68970 670.23836 L
240.27250 670.23836 L
240.27250 703.48649 L
@c
S

@rax %Note: Object
185.02299 686.02195 241.33039 686.02309 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.99984 1.99984 0.00000 @w
/$fm 0 def
185.02299 686.02252 m
234.29395 686.02252 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
241.33039 686.02252 m
227.32951 692.02290 L
229.32964 688.02265 229.32964 684.02239 227.32951 680.02214 C
241.33039 686.02252 L
f
@J

@rax %Note: Object
348.55597 686.69660 404.86337 686.69773 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.99984 1.99984 0.00000 @w
/$fm 0 def
348.55597 686.69717 m
397.82693 686.69717 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
404.86337 686.69717 m
390.86249 692.69754 L
392.86261 688.69729 392.86261 684.69704 390.86249 680.69679 C
404.86337 686.69717 L
f
@J

@rax 108.79143 681.47915 147.75506 691.41203 @E
[0.00028346 0.00000000 0.00000000 0.00028346 108.79142909 681.69143963] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49388.00000 z
%CHAR: 0 0 (S) @t
22644 33444 m
22644 22134 L
21755 22134 L
21459 24307 20941 26036 20200 27320 c
19451 28612 18381 29633 16998 30382 c
15615 31139 14191 31518 12709 31518 c
11038 31518 9655 31007 8561 29987 c
7466 28966 6923 27805 6923 26505 c
6923 25509 7268 24595 7960 23780 c
8956 22570 11326 20965 15072 18957 c
18125 17319 20216 16059 21327 15179 c
22447 14306 23311 13269 23912 12084 c
24513 10890 24817 9647 24817 8347 c
24817 5869 23854 3737 21937 1943 c
20010 148 17541 -749 14520 -749 c
13565 -749 12676 -675 11837 -527 c
11343 -453 10306 -156 8742 346 c
7178 856 6182 1111 5762 1111 c
5359 1111 5046 988 4807 749 c
4577 510 4404 8 4289 -749 C
3400 -749 L
3400 10462 L
4289 10462 L
4708 8116 5276 6363 5984 5194 c
6692 4033 7770 3062 9227 2288 c
10676 1523 12273 1136 14010 1136 c
16018 1136 17607 1663 18776 2725 c
19936 3786 20521 5038 20521 6486 c
20521 7293 20298 8100 19862 8923 c
19418 9746 18726 10503 17796 11211 c
17171 11697 15458 12717 12660 14290 c
9861 15854 7877 17105 6692 18035 c
5507 18973 4618 20002 4000 21122 c
3391 22249 3087 23492 3087 24842 c
3087 27188 3984 29205 5787 30900 c
7589 32596 9878 33444 12660 33444 c
14397 33444 16240 33024 18183 32168 c
19080 31765 19722 31567 20084 31567 c
20504 31567 20850 31691 21113 31938 c
21377 32193 21591 32695 21755 33444 C
22644 33444 L
@c
F
%CHAR: 27468 0 (e) @t
32728 13771 m
32711 10487 33502 7919 35115 6050 c
36720 4190 38613 3260 40778 3260 c
42227 3260 43486 3655 44556 4453 c
45626 5243 46515 6610 47240 8536 C
47989 8058 L
47651 5852 46672 3844 45050 2041 c
43420 230 41387 -675 38951 -675 c
36292 -675 34020 354 32135 2420 c
30242 4486 29304 7268 29304 10758 c
29304 14537 30267 17483 32209 19591 c
34144 21706 36572 22768 39502 22768 c
41980 22768 44013 21953 45602 20315 c
47190 18685 47989 16504 47989 13771 C
32728 13771 L
@c
32728 15170 m
42951 15170 L
42869 16586 42704 17582 42441 18158 c
42046 19056 41445 19763 40646 20282 c
39848 20792 39017 21056 38152 21056 c
36819 21056 35625 20537 34572 19500 c
33518 18463 32901 17014 32728 15170 C
@c
F
%CHAR: 49388 0 (n) @t
57372 18060 m
59957 21179 62426 22743 64772 22743 c
65982 22743 67020 22439 67884 21838 c
68756 21237 69448 20241 69958 18858 c
70312 17895 70485 16413 70485 14421 c
70485 4988 l
70485 3597 70600 2642 70831 2148 c
71003 1745 71292 1432 71687 1202 c
72074 980 72806 864 73868 864 C
73868 0 L
62937 0 L
62937 864 L
63398 864 l
64427 864 65151 1029 65554 1342 c
65966 1654 66254 2115 66410 2725 c
66476 2963 66509 3721 66509 4988 c
66509 14034 l
66509 16043 66246 17500 65727 18413 c
65200 19319 64320 19772 63085 19772 c
61175 19772 59266 18726 57372 16636 C
57372 4988 l
57372 3498 57455 2576 57636 2222 c
57858 1753 58171 1408 58566 1194 c
58961 980 59759 864 60961 864 C
60961 0 L
50038 0 L
50038 864 L
50524 864 l
51643 864 52409 1152 52804 1720 c
53191 2297 53388 3383 53388 4988 c
53388 13195 l
53388 15845 53331 17459 53207 18035 c
53092 18619 52903 19014 52656 19220 c
52409 19426 52071 19533 51652 19533 c
51207 19533 50664 19409 50038 19171 C
49676 20043 L
56335 22743 L
57372 22743 L
57372 18060 L
@c
F
%CHAR: 74082 0 (d) @t
91228 2486 m
90150 1358 89096 551 88067 58 c
87038 -428 85927 -675 84742 -675 c
82330 -675 80223 337 78420 2354 c
76625 4371 75720 6964 75720 10125 c
75720 13294 76716 16191 78716 18825 c
80708 21451 83268 22768 86404 22768 c
88347 22768 89960 22142 91228 20908 C
91228 24982 l
91228 27509 91170 29057 91047 29641 c
90923 30217 90734 30612 90479 30818 c
90224 31032 89903 31131 89516 31131 c
89096 31131 88544 31007 87853 30744 C
87540 31592 L
94125 34292 L
95204 34292 L
95204 8750 l
95204 6165 95269 4585 95385 4017 c
95508 3441 95697 3046 95969 2823 c
96233 2593 96545 2486 96891 2486 c
97327 2486 97912 2618 98628 2897 C
98899 2050 L
92339 -675 L
91228 -675 L
91228 2486 L
@c
91228 4173 m
91228 15557 l
91129 16644 90841 17648 90364 18545 c
89878 19442 89236 20126 88446 20578 c
87647 21039 86873 21270 86116 21270 c
84700 21270 83441 20636 82330 19368 c
80865 17689 80132 15253 80132 12034 c
80132 8783 80840 6297 82256 4568 c
83672 2840 85244 1976 86980 1976 c
88446 1976 89861 2708 91228 4173 C
@c
F
%CHAR: 98776 0 (e) @t
104036 13771 m
104019 10487 104810 7919 106423 6050 c
108028 4190 109921 3260 112086 3260 c
113535 3260 114794 3655 115864 4453 c
116934 5243 117823 6610 118548 8536 C
119297 8058 L
118959 5852 117980 3844 116358 2041 c
114728 230 112695 -675 110259 -675 c
107600 -675 105328 354 103443 2420 c
101550 4486 100612 7268 100612 10758 c
100612 14537 101575 17483 103517 19591 c
105452 21706 107880 22768 110810 22768 c
113288 22768 115321 21953 116910 20315 c
118498 18685 119297 16504 119297 13771 C
104036 13771 L
@c
104036 15170 m
114259 15170 L
114177 16586 114012 17582 113749 18158 c
113354 19056 112753 19763 111954 20282 c
111156 20792 110325 21056 109460 21056 c
108127 21056 106933 20537 105880 19500 c
104826 18463 104209 17014 104036 15170 C
@c
F
%CHAR: 120696 0 (r) @t
128705 22743 m
128705 17771 L
130549 21089 132450 22743 134393 22743 c
135274 22743 136006 22472 136591 21937 c
137167 21393 137455 20768 137455 20068 c
137455 19434 137249 18907 136829 18471 c
136410 18035 135916 17821 135331 17821 c
134772 17821 134138 18101 133438 18652 c
132738 19204 132220 19484 131882 19484 c
131594 19484 131281 19327 130944 19006 c
130220 18348 129471 17261 128705 15747 C
128705 5161 l
128705 3943 128853 3013 129158 2387 c
129372 1951 129742 1589 130269 1301 c
130804 1012 131561 864 132557 864 C
132557 0 L
121247 0 L
121247 864 L
122375 864 123215 1045 123758 1399 c
124161 1654 124441 2066 124606 2626 c
124680 2906 124721 3679 124721 4972 c
124721 13532 l
124721 16100 124672 17632 124565 18125 c
124466 18611 124268 18973 123989 19195 c
123709 19418 123355 19533 122935 19533 c
122441 19533 121881 19409 121247 19171 C
121009 20043 L
127693 22743 L
128705 22743 L
@c
F
T
@rax 277.71364 682.42706 310.85320 692.27830 @E
[0.00028346 0.00000000 0.00000000 0.00028346 277.71362764 682.55770732] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49388.00000 z
%CHAR: 0 0 (K) @t
14759 18134 m
26818 6149 l
28793 4173 30481 2823 31880 2107 c
33279 1391 34679 988 36078 889 C
36078 0 L
20521 0 L
20521 889 L
21451 889 22126 1045 22537 1366 c
22949 1679 23155 2025 23155 2412 c
23155 2799 23072 3144 22924 3449 c
22768 3753 22266 4321 21418 5161 c
10125 16323 L
10125 5787 l
10125 4132 10232 3037 10446 2511 c
10602 2107 10939 1762 11458 1473 c
12149 1087 12874 889 13648 889 c
14759 889 L
14759 0 L
823 0 L
823 889 L
1976 889 l
3325 889 4305 1284 4922 2074 c
5309 2585 5499 3828 5499 5787 c
5499 26916 l
5499 28571 5392 29674 5186 30217 c
5021 30604 4692 30942 4198 31230 c
3490 31617 2749 31806 1976 31806 c
823 31806 L
823 32703 L
14759 32703 L
14759 31806 L
13648 31806 l
12890 31806 12166 31625 11458 31254 c
10956 30999 10610 30612 10421 30094 c
10223 29583 10125 28522 10125 26916 c
10125 16907 L
10454 17212 11549 18232 13434 19969 c
18208 24340 21097 27262 22093 28719 c
22521 29361 22743 29929 22743 30407 c
22743 30777 22570 31106 22233 31386 c
21895 31666 21327 31806 20521 31806 c
19772 31806 L
19772 32703 L
31781 32703 L
31781 31806 L
31073 31789 30431 31699 29855 31518 c
29279 31345 28571 30999 27731 30497 c
26900 29987 25871 29172 24645 28044 c
24291 27723 22661 26077 19747 23105 c
14759 18134 L
@c
F
%CHAR: 35666 0 (a) @t
49725 3186 m
47462 1432 46037 420 45453 148 c
44589 -255 43667 -461 42687 -461 c
41156 -461 39897 66 38909 1111 c
37921 2157 37428 3531 37428 5235 c
37428 6313 37666 7244 38152 8034 c
38810 9120 39955 10149 41584 11121 c
43214 12084 45930 13252 49725 14635 C
49725 15508 l
49725 17706 49379 19220 48680 20043 c
47980 20858 46959 21270 45626 21270 c
44613 21270 43807 20998 43214 20447 c
42605 19903 42300 19278 42300 18570 c
42350 17171 l
42350 16430 42161 15862 41782 15458 c
41403 15055 40909 14858 40300 14858 c
39699 14858 39214 15063 38835 15483 c
38456 15903 38267 16471 38267 17195 c
38267 18578 38975 19846 40391 21006 c
41807 22159 43790 22743 46350 22743 c
48309 22743 49914 22414 51174 21755 c
52120 21253 52820 20471 53273 19409 c
53561 18718 53701 17310 53701 15170 c
53701 7672 l
53701 5564 53742 4272 53824 3795 c
53907 3325 54038 3004 54219 2848 c
54409 2683 54623 2601 54861 2601 c
55117 2601 55347 2659 55536 2774 c
55874 2980 56524 3572 57487 4535 C
57487 3186 L
55693 774 53972 -436 52326 -436 c
51544 -436 50919 -165 50449 387 c
49980 930 49742 1869 49725 3186 C
@c
49725 4749 m
49725 13170 L
47297 12199 45733 11516 45025 11121 c
43749 10413 42844 9672 42300 8898 c
41749 8124 41477 7285 41477 6363 c
41477 5210 41823 4247 42514 3482 c
43206 2725 44004 2338 44902 2338 c
46128 2338 47733 3144 49725 4749 C
@c
F
%CHAR: 57586 0 (n) @t
65570 18060 m
68155 21179 70624 22743 72970 22743 c
74180 22743 75218 22439 76082 21838 c
76954 21237 77646 20241 78156 18858 c
78510 17895 78683 16413 78683 14421 c
78683 4988 l
78683 3597 78798 2642 79029 2148 c
79201 1745 79490 1432 79885 1202 c
80272 980 81004 864 82066 864 C
82066 0 L
71135 0 L
71135 864 L
71596 864 l
72625 864 73349 1029 73752 1342 c
74164 1654 74452 2115 74608 2725 c
74674 2963 74707 3721 74707 4988 c
74707 14034 l
74707 16043 74444 17500 73925 18413 c
73398 19319 72518 19772 71283 19772 c
69373 19772 67464 18726 65570 16636 C
65570 4988 l
65570 3498 65653 2576 65834 2222 c
66056 1753 66369 1408 66764 1194 c
67159 980 67957 864 69159 864 C
69159 0 L
58236 0 L
58236 864 L
58722 864 l
59841 864 60607 1152 61002 1720 c
61389 2297 61586 3383 61586 4988 c
61586 13195 l
61586 15845 61529 17459 61405 18035 c
61290 18619 61101 19014 60854 19220 c
60607 19426 60269 19533 59850 19533 c
59405 19533 58862 19409 58236 19171 C
57874 20043 L
64533 22743 L
65570 22743 L
65570 18060 L
@c
F
%CHAR: 82280 0 (a) @t
96339 3186 m
94076 1432 92651 420 92067 148 c
91203 -255 90281 -461 89301 -461 c
87770 -461 86511 66 85523 1111 c
84535 2157 84042 3531 84042 5235 c
84042 6313 84280 7244 84766 8034 c
85424 9120 86569 10149 88198 11121 c
89828 12084 92544 13252 96339 14635 C
96339 15508 l
96339 17706 95993 19220 95294 20043 c
94594 20858 93573 21270 92240 21270 c
91227 21270 90421 20998 89828 20447 c
89219 19903 88914 19278 88914 18570 c
88964 17171 l
88964 16430 88775 15862 88396 15458 c
88017 15055 87523 14858 86914 14858 c
86313 14858 85828 15063 85449 15483 c
85070 15903 84881 16471 84881 17195 c
84881 18578 85589 19846 87005 21006 c
88421 22159 90404 22743 92964 22743 c
94923 22743 96528 22414 97788 21755 c
98734 21253 99434 20471 99887 19409 c
100175 18718 100315 17310 100315 15170 c
100315 7672 l
100315 5564 100356 4272 100438 3795 c
100521 3325 100652 3004 100833 2848 c
101023 2683 101237 2601 101475 2601 c
101731 2601 101961 2659 102150 2774 c
102488 2980 103138 3572 104101 4535 C
104101 3186 L
102307 774 100586 -436 98940 -436 c
98158 -436 97533 -165 97063 387 c
96594 930 96356 1869 96339 3186 C
@c
96339 4749 m
96339 13170 L
93911 12199 92347 11516 91639 11121 c
90363 10413 89458 9672 88914 8898 c
88363 8124 88091 7285 88091 6363 c
88091 5210 88437 4247 89128 3482 c
89820 2725 90618 2338 91516 2338 c
92742 2338 94347 3144 96339 4749 C
@c
F
%CHAR: 104200 0 (l) @t
113337 34292 m
113337 4988 l
113337 3605 113444 2692 113641 2239 c
113839 1794 114152 1449 114571 1218 c
114991 988 115765 864 116909 864 C
116909 0 L
106085 0 L
106085 864 L
107097 864 107789 971 108151 1185 c
108521 1391 108818 1737 109024 2222 c
109229 2700 109336 3622 109336 4988 c
109336 25056 l
109336 27550 109279 29081 109172 29649 c
109056 30217 108875 30612 108628 30818 c
108373 31032 108060 31131 107674 31131 c
107254 31131 106727 31007 106085 30744 C
105673 31592 L
112258 34292 L
113337 34292 L
@c
F
T
@rax 429.31049 680.40227 491.59077 693.13039 @E
[0.00028346 0.00000000 0.00000000 0.00028346 429.31047248 683.42397500] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49388.00000 z
%CHAR: 0 0 (E) @t
10322 30917 m
10322 17994 L
17508 17994 l
19377 17994 20619 18274 21245 18833 c
22085 19574 22546 20875 22644 22743 C
23533 22743 L
23533 11359 L
22644 11359 L
22422 12948 22192 13969 21969 14421 c
21681 14981 21204 15426 20545 15747 c
19887 16068 18874 16232 17508 16232 c
10322 16232 L
10322 5449 l
10322 4000 10388 3120 10511 2807 c
10643 2494 10865 2247 11186 2058 c
11507 1877 12125 1786 13022 1786 c
18570 1786 l
20414 1786 21764 1910 22595 2173 c
23435 2428 24233 2930 25007 3688 c
26003 4684 27023 6190 28069 8198 C
29032 8198 L
26217 0 L
1012 0 L
1012 889 L
2173 889 l
2939 889 3671 1078 4363 1449 c
4881 1704 5227 2091 5416 2601 c
5597 3120 5688 4173 5688 5762 c
5688 27007 l
5688 29081 5482 30357 5062 30843 c
4486 31485 3523 31806 2173 31806 c
1012 31806 L
1012 32703 L
26217 32703 L
26579 25542 L
25632 25542 L
25295 27262 24924 28439 24513 29081 c
24101 29723 23500 30217 22694 30555 c
22052 30793 20916 30917 19294 30917 c
10322 30917 L
@c
F
%CHAR: 30168 0 (m) @t
38268 18035 m
39881 19648 40828 20570 41116 20809 c
41840 21426 42622 21895 43453 22233 c
44293 22570 45116 22743 45939 22743 c
47322 22743 48516 22340 49512 21533 c
50508 20735 51174 19566 51512 18035 C
53166 19969 54566 21237 55710 21838 c
56846 22439 58023 22743 59225 22743 c
60402 22743 61439 22439 62353 21838 c
63258 21237 63974 20249 64509 18883 c
64863 17953 65036 16487 65036 14495 c
65036 4988 l
65036 3605 65143 2659 65349 2148 c
65513 1794 65810 1490 66246 1243 c
66682 996 67382 864 68370 864 C
68370 0 L
57463 0 L
57463 864 L
57924 864 l
58871 864 59611 1054 60147 1424 c
60517 1679 60780 2091 60937 2650 c
61003 2922 61036 3704 61036 4988 c
61036 14495 l
61036 16298 60821 17566 60385 18306 c
59760 19335 58755 19846 57373 19846 c
56516 19846 55660 19632 54804 19212 c
53940 18784 52903 17994 51676 16833 C
51627 16570 L
51676 15533 L
51676 4988 l
51676 3482 51767 2543 51932 2173 c
52105 1803 52417 1490 52886 1243 c
53347 996 54146 864 55274 864 C
55274 0 L
44104 0 L
44104 864 L
45330 864 46170 1012 46631 1301 c
47083 1589 47404 2025 47577 2601 c
47660 2881 47701 3671 47701 4988 c
47701 14495 l
47701 16298 47437 17590 46902 18372 c
46194 19401 45207 19920 43939 19920 c
43066 19920 42210 19689 41354 19220 c
40021 18512 38992 17714 38268 16833 C
38268 4988 l
38268 3548 38375 2601 38572 2173 c
38770 1737 39074 1408 39461 1194 c
39856 980 40655 864 41865 864 C
41865 0 L
30942 0 L
30942 864 L
31954 864 32662 980 33065 1194 c
33461 1408 33773 1753 33979 2231 c
34185 2708 34292 3622 34292 4988 c
34292 13434 l
34292 15862 34218 17426 34078 18134 c
33963 18669 33782 19031 33543 19228 c
33304 19434 32975 19533 32555 19533 c
32102 19533 31567 19409 30942 19171 C
30580 20043 L
37230 22743 L
38268 22743 L
38268 18035 L
@c
F
%CHAR: 68584 0 (p) @t
68535 19895 m
75334 22644 L
76256 22644 L
76256 17483 L
77392 19426 78536 20792 79688 21574 c
80840 22348 82050 22743 83318 22743 c
85541 22743 87384 21871 88866 20134 c
90685 18010 91591 15253 91591 11837 c
91591 8034 90496 4881 88306 2387 c
86512 346 84240 -675 81507 -675 c
80322 -675 79293 -510 78420 -165 c
77778 74 77054 551 76256 1276 C
76256 -5449 l
76256 -6964 76346 -7919 76527 -8330 c
76717 -8742 77038 -9071 77499 -9310 c
77951 -9548 78783 -9672 79993 -9672 C
79993 -10561 L
68419 -10561 L
68419 -9672 L
69020 -9672 l
69901 -9688 70658 -9515 71284 -9161 c
71588 -8989 71827 -8701 72000 -8305 c
72165 -7910 72247 -6914 72247 -5309 c
72247 15582 l
72247 17006 72189 17920 72058 18306 c
71926 18693 71720 18981 71440 19171 c
71160 19368 70782 19459 70296 19459 c
69909 19459 69424 19352 68823 19121 C
68535 19895 L
@c
76256 16059 m
76256 7812 l
76256 6025 76321 4856 76470 4289 c
76692 3358 77243 2543 78124 1836 c
78997 1128 80100 774 81441 774 c
83046 774 84347 1399 85343 2650 c
86644 4289 87294 6602 87294 9573 c
87294 12948 86561 15549 85080 17360 c
84051 18619 82824 19245 81417 19245 c
80643 19245 79877 19047 79120 18669 c
78544 18372 77589 17508 76256 16059 C
@c
F
%CHAR: 93278 0 (f) @t
103452 20356 m
103452 5836 l
103452 3778 103682 2478 104127 1926 c
104728 1218 105518 864 106514 864 c
108522 864 L
108522 0 L
95328 0 L
95328 864 L
96315 864 l
96957 864 97550 1029 98077 1350 c
98604 1671 98974 2107 99172 2650 c
99377 3202 99476 4264 99476 5836 c
99476 20356 L
95179 20356 L
95179 22093 L
99476 22093 L
99476 23533 l
99476 25739 99830 27608 100538 29131 c
101246 30662 102324 31896 103781 32835 c
105238 33773 106868 34242 108687 34242 c
110374 34242 111930 33699 113346 32604 c
114276 31880 114737 31065 114737 30168 c
114737 29682 114531 29229 114112 28810 c
113692 28382 113247 28168 112762 28168 c
112391 28168 112004 28299 111593 28563 c
111181 28826 110679 29402 110086 30275 c
109494 31156 108942 31740 108448 32053 c
107946 32357 107395 32506 106786 32506 c
106045 32506 105419 32308 104901 31913 c
104390 31526 104020 30909 103789 30086 c
103567 29254 103452 27122 103452 23682 c
103452 22093 L
109148 22093 L
109148 20356 L
103452 20356 L
@c
F
%CHAR: 109724 0 (\344) @t
123783 3186 m
121520 1432 120095 420 119511 148 c
118647 -255 117725 -461 116745 -461 c
115214 -461 113955 66 112967 1111 c
111979 2157 111486 3531 111486 5235 c
111486 6313 111724 7244 112210 8034 c
112868 9120 114013 10149 115642 11121 c
117272 12084 119988 13252 123783 14635 C
123783 15508 l
123783 17706 123437 19220 122738 20043 c
122038 20858 121017 21270 119684 21270 c
118671 21270 117865 20998 117272 20447 c
116663 19903 116358 19278 116358 18570 c
116408 17171 l
116408 16430 116219 15862 115840 15458 c
115461 15055 114967 14858 114358 14858 c
113757 14858 113272 15063 112893 15483 c
112514 15903 112325 16471 112325 17195 c
112325 18578 113033 19846 114449 21006 c
115865 22159 117848 22743 120408 22743 c
122367 22743 123972 22414 125232 21755 c
126178 21253 126878 20471 127331 19409 c
127619 18718 127759 17310 127759 15170 c
127759 7672 l
127759 5564 127800 4272 127882 3795 c
127965 3325 128096 3004 128277 2848 c
128467 2683 128681 2601 128919 2601 c
129175 2601 129405 2659 129594 2774 c
129932 2980 130582 3572 131545 4535 C
131545 3186 L
129751 774 128030 -436 126384 -436 c
125602 -436 124977 -165 124507 387 c
124038 930 123800 1869 123783 3186 C
@c
123783 4749 m
123783 13170 L
121355 12199 119791 11516 119083 11121 c
117807 10413 116902 9672 116358 8898 c
115807 8124 115535 7285 115535 6363 c
115535 5210 115881 4247 116572 3482 c
117264 2725 118062 2338 118960 2338 c
120186 2338 121791 3144 123783 4749 C
@c
125018 32242 m
125734 32242 126351 31987 126862 31468 c
127364 30958 127619 30341 127619 29616 c
127619 28892 127364 28275 126862 27773 c
126351 27262 125734 27007 125018 27007 c
124293 27007 123676 27262 123158 27773 c
122647 28275 122384 28892 122384 29616 c
122384 30341 122647 30958 123158 31468 c
123676 31987 124293 32242 125018 32242 c
@c
116498 32242 m
117239 32242 117865 31987 118367 31468 c
118877 30958 119132 30341 119132 29616 c
119132 28892 118869 28275 118359 27773 c
117840 27262 117231 27007 116523 27007 c
115799 27007 115181 27262 114671 27773 c
114152 28275 113897 28892 113897 29616 c
113897 30341 114152 30958 114655 31468 c
115165 31987 115782 32242 116498 32242 c
@c
F
%CHAR: 131644 0 (n) @t
139628 18060 m
142213 21179 144682 22743 147028 22743 c
148238 22743 149276 22439 150140 21838 c
151012 21237 151704 20241 152214 18858 c
152568 17895 152741 16413 152741 14421 c
152741 4988 l
152741 3597 152856 2642 153087 2148 c
153259 1745 153548 1432 153943 1202 c
154330 980 155062 864 156124 864 C
156124 0 L
145193 0 L
145193 864 L
145654 864 l
146683 864 147407 1029 147810 1342 c
148222 1654 148510 2115 148666 2725 c
148732 2963 148765 3721 148765 4988 c
148765 14034 l
148765 16043 148502 17500 147983 18413 c
147456 19319 146576 19772 145341 19772 c
143431 19772 141522 18726 139628 16636 C
139628 4988 l
139628 3498 139711 2576 139892 2222 c
140114 1753 140427 1408 140822 1194 c
141217 980 142015 864 143217 864 C
143217 0 L
132294 0 L
132294 864 L
132780 864 l
133899 864 134665 1152 135060 1720 c
135447 2297 135644 3383 135644 4988 c
135644 13195 l
135644 15845 135587 17459 135463 18035 c
135348 18619 135159 19014 134912 19220 c
134665 19426 134327 19533 133908 19533 c
133463 19533 132920 19409 132294 19171 C
131932 20043 L
138591 22743 L
139628 22743 L
139628 18060 L
@c
F
%CHAR: 156338 0 (g) @t
163787 8058 m
162437 8717 161400 9631 160676 10816 c
159952 12001 159598 13302 159598 14734 c
159598 16924 160421 18800 162067 20381 c
163713 21953 165820 22743 168397 22743 c
170504 22743 172323 22225 173871 21196 C
178546 21196 l
179238 21196 179641 21179 179756 21138 c
179863 21097 179945 21031 179995 20932 c
180094 20784 180143 20529 180143 20159 c
180143 19739 180102 19451 180020 19294 c
179970 19212 179888 19146 179764 19097 c
179649 19047 179238 19031 178546 19031 c
175682 19031 L
176579 17870 177032 16389 177032 14586 c
177032 12528 176241 10775 174669 9310 c
173089 7844 170973 7112 168323 7112 c
167228 7112 166117 7276 164973 7598 C
164265 6988 163787 6453 163540 5992 c
163285 5531 163162 5145 163162 4824 c
163162 4552 163293 4289 163557 4025 c
163829 3770 164347 3589 165113 3474 c
165565 3408 166693 3350 168496 3301 c
171805 3227 173953 3111 174933 2963 c
176422 2757 177616 2206 178513 1301 c
179402 403 179847 -708 179847 -2025 c
179847 -3844 178999 -5548 177295 -7137 c
174784 -9482 171517 -10660 167483 -10660 c
164380 -10660 161754 -9960 159614 -8561 c
158412 -7754 157811 -6923 157811 -6050 c
157811 -5663 157894 -5285 158075 -4898 c
158346 -4297 158914 -3474 159762 -2412 c
159877 -2264 160692 -1399 162223 189 C
161384 691 160799 1136 160454 1531 c
160108 1926 159935 2371 159935 2873 c
159935 3432 160157 4091 160618 4848 c
161079 5606 162133 6676 163787 8058 C
@c
167985 21583 m
166800 21583 165796 21105 164997 20159 c
164191 19212 163787 17755 163787 15796 c
163787 13252 164339 11285 165434 9886 c
166265 8824 167327 8297 168611 8297 c
169837 8297 170842 8750 171624 9672 c
172414 10585 172809 12026 172809 13985 c
172809 16545 172257 18545 171146 19994 c
170323 21056 169269 21583 167985 21583 c
@c
163549 0 m
162791 -823 162223 -1580 161837 -2288 c
161450 -2996 161260 -3646 161260 -4247 c
161260 -5013 161721 -5688 162660 -6272 c
164265 -7268 166586 -7762 169623 -7762 c
172521 -7762 174653 -7252 176027 -6231 c
177402 -5210 178093 -4124 178093 -2963 c
178093 -2132 177682 -1539 176859 -1185 c
176027 -831 174365 -617 171895 -551 c
168273 -461 165491 -272 163549 0 C
@c
F
%CHAR: 181032 0 (e) @t
186292 13771 m
186275 10487 187066 7919 188679 6050 c
190284 4190 192177 3260 194342 3260 c
195791 3260 197050 3655 198120 4453 c
199190 5243 200079 6610 200804 8536 C
201553 8058 L
201215 5852 200236 3844 198614 2041 c
196984 230 194951 -675 192515 -675 c
189856 -675 187584 354 185699 2420 c
183806 4486 182868 7268 182868 10758 c
182868 14537 183831 17483 185773 19591 c
187708 21706 190136 22768 193066 22768 c
195544 22768 197577 21953 199166 20315 c
200754 18685 201553 16504 201553 13771 C
186292 13771 L
@c
186292 15170 m
196515 15170 L
196433 16586 196268 17582 196005 18158 c
195610 19056 195009 19763 194210 20282 c
193412 20792 192581 21056 191716 21056 c
190383 21056 189189 20537 188136 19500 c
187082 18463 186465 17014 186292 15170 C
@c
F
%CHAR: 202952 0 (r) @t
210961 22743 m
210961 17771 L
212805 21089 214706 22743 216649 22743 c
217530 22743 218262 22472 218847 21937 c
219423 21393 219711 20768 219711 20068 c
219711 19434 219505 18907 219085 18471 c
218666 18035 218172 17821 217587 17821 c
217028 17821 216394 18101 215694 18652 c
214994 19204 214476 19484 214138 19484 c
213850 19484 213537 19327 213200 19006 c
212476 18348 211727 17261 210961 15747 C
210961 5161 l
210961 3943 211109 3013 211414 2387 c
211628 1951 211998 1589 212525 1301 c
213060 1012 213817 864 214813 864 C
214813 0 L
203503 0 L
203503 864 L
204631 864 205471 1045 206014 1399 c
206417 1654 206697 2066 206862 2626 c
206936 2906 206977 3679 206977 4972 c
206977 13532 l
206977 16100 206928 17632 206821 18125 c
206722 18611 206524 18973 206245 19195 c
205965 19418 205611 19533 205191 19533 c
204697 19533 204137 19409 203503 19171 C
203265 20043 L
209949 22743 L
210961 22743 L
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
