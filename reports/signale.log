Traceback (most recent call last):
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/bitzer/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib
import numpy
from matplotlib import pyplot
from myst_nb import glue

matplotlib.style.use('sv.mplstyle')

samples = numpy.linspace(-15, 15, 31)
si = [0]*len(samples)

fs = 1000 # sampling frequency
f0 = 100 # Si-frequency

# Berechnet Werte
for val in samples:
    if (val!=0):
        si.append(numpy.sin(2*numpy.pi * f0 * val/fs )/(2*numpy.pi*val*f0/fs))
    else:
        # at 0 si is 1 to avoid division by zero
        si.append(1)
        
fig_delta, ax_delta = pyplot.subplots()
ax_delta.stem(samples, si)
ax_delta.set(xlabel='Folgenkindex k ->', ylabel='Amplitude x(k)', 
        title='Diskrete SI-Funktion', xlim=[-15, 15])

glue("SiFunktionDiskret", fig_delta, display=False)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_210513/3634563322.py[0m in [0;36m<module>[0;34m[0m
[1;32m     21[0m [0;34m[0m[0m
[1;32m     22[0m [0mfig_delta[0m[0;34m,[0m [0max_delta[0m [0;34m=[0m [0mpyplot[0m[0;34m.[0m[0msubplots[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 23[0;31m [0max_delta[0m[0;34m.[0m[0mstem[0m[0;34m([0m[0msamples[0m[0;34m,[0m [0msi[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     24[0m ax_delta.set(xlabel='Folgenkindex k ->', ylabel='Amplitude x(k)', 
[1;32m     25[0m         title='Diskrete SI-Funktion', xlim=[-15, 15])

[0;32m~/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/matplotlib/__init__.py[0m in [0;36minner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1359[0m     [0;32mdef[0m [0minner[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1360[0m         [0;32mif[0m [0mdata[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1361[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0mmap[0m[0;34m([0m[0msanitize_sequence[0m[0;34m,[0m [0margs[0m[0;34m)[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1362[0m [0;34m[0m[0m
[1;32m   1363[0m         [0mbound[0m [0;34m=[0m [0mnew_sig[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/matplotlib/axes/_axes.py[0m in [0;36mstem[0;34m(self, linefmt, markerfmt, basefmt, bottom, label, use_line_collection, orientation, *args)[0m
[1;32m   2871[0m                 [0mlinestyle[0m [0;34m=[0m [0mrcParams[0m[0;34m[[0m[0;34m'lines.linestyle'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m   2872[0m             [0mxlines[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mvlines[0m [0;32mif[0m [0morientation[0m [0;34m==[0m [0;34m"vertical"[0m [0;32melse[0m [0mself[0m[0;34m.[0m[0mhlines[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2873[0;31m             stemlines = xlines(
[0m[1;32m   2874[0m                 [0mlocs[0m[0;34m,[0m [0mbottom[0m[0;34m,[0m [0mheads[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2875[0m                 colors=linecolor, linestyles=linestyle, label="_nolegend_")

[0;32m~/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/matplotlib/__init__.py[0m in [0;36minner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1359[0m     [0;32mdef[0m [0minner[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1360[0m         [0;32mif[0m [0mdata[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1361[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0mmap[0m[0;34m([0m[0msanitize_sequence[0m[0;34m,[0m [0margs[0m[0;34m)[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1362[0m [0;34m[0m[0m
[1;32m   1363[0m         [0mbound[0m [0;34m=[0m [0mnew_sig[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/matplotlib/axes/_axes.py[0m in [0;36mvlines[0;34m(self, x, ymin, ymax, colors, linestyles, label, **kwargs)[0m
[1;32m   1113[0m         [0mmasked_verts[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m=[0m [0mymin[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1114[0m         [0mmasked_verts[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m][0m [0;34m=[0m [0mx[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1115[0;31m         [0mmasked_verts[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0;36m1[0m[0;34m,[0m [0;36m1[0m[0;34m][0m [0;34m=[0m [0mymax[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1116[0m [0;34m[0m[0m
[1;32m   1117[0m         lines = mcoll.LineCollection(masked_verts, colors=colors,

[0;32m~/SoftDev/Python/ScienceEnv/SE/lib/python3.9/site-packages/numpy/ma/core.py[0m in [0;36m__setitem__[0;34m(self, indx, value)[0m
[1;32m   3377[0m         [0;32mif[0m [0m_mask[0m [0;32mis[0m [0mnomask[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3378[0m             [0;31m# Set the data, then the mask[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3379[0;31m             [0m_data[0m[0;34m[[0m[0mindx[0m[0;34m][0m [0;34m=[0m [0mdval[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3380[0m             [0;32mif[0m [0mmval[0m [0;32mis[0m [0;32mnot[0m [0mnomask[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3381[0m                 [0m_mask[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_mask[0m [0;34m=[0m [0mmake_mask_none[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mshape[0m[0;34m,[0m [0m_dtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: could not broadcast input array from shape (62,) into shape (31,)
ValueError: could not broadcast input array from shape (62,) into shape (31,)

